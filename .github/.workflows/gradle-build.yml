name: Gradle Build # Trigger the workflow on push or pull requests to the main branch on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main # Define the jobs that will run the task jobs:
  build:
    runs-on: ubuntu-latest # Define the environment to run the job steps:
      # Step 1: Check out the code from the repository - name: Checkout code
        uses: actions/checkout@v3
      # Step 2: Set up the JDK environment - name: Set up JDK 11
        uses: actions/setup-java@v3 with:
          java-version: '11' # You can specify a different Java version if needed
      # Step 3: Grant execute permissions for the Gradle wrapper - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew
      # Step 4: Run the Gradle build task - name: Run Gradle Build
        run: ./gradlew build # Specify the Gradle task to run
      # Optionally, you can cache Gradle dependencies between builds to speed up the process - name: Cache Gradle packages
        uses: actions/cache@v3 with:
          path: |
            ~/.gradle/caches ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }} restore-keys: |
            ${{ runner.os }}-gradle

     # Step 4: Run the specified Gradle task (in this case, `build`)
      - name: Run Gradle build task
        run: ./gradlew build  # You can replace 'build' with any other task




